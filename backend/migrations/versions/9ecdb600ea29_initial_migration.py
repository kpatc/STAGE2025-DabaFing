"""Initial migration

Revision ID: 9ecdb600ea29
Revises: 
Create Date: 2025-04-15 18:52:59.937869

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9ecdb600ea29'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('imageempreinte')
    op.drop_table('rapport')
    op.drop_table('empreinte')
    op.drop_table('Analyse')
    op.drop_table('modeleia')
    op.drop_table('exportresultat')
    op.drop_table('feedback')
    with op.batch_alter_table('utilisateur', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email_confirmed', sa.Boolean(), nullable=True))
        batch_op.alter_column('mot_de_passe',
               existing_type=sa.TEXT(),
               type_=sa.String(length=200),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('utilisateur', schema=None) as batch_op:
        batch_op.alter_column('mot_de_passe',
               existing_type=sa.String(length=200),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.drop_column('email_confirmed')

    op.create_table('feedback',
    sa.Column('id_feedback', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('id_analyse', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id_utilisateur', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('commentaire', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('validation', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id_analyse'], ['Analyse.id_analyse'], name='feedback_id_analyse_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['id_utilisateur'], ['utilisateur.id_utilisateur'], name='feedback_id_utilisateur_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id_feedback', name='feedback_pkey')
    )
    op.create_table('exportresultat',
    sa.Column('id_export', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('id_analyse', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('format_export', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('path_fich', sa.TEXT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id_analyse'], ['Analyse.id_analyse'], name='exportresultat_id_analyse_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id_export', name='exportresultat_pkey')
    )
    op.create_table('modeleia',
    sa.Column('id_modele', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('accuracy_actuelle', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=False),
    sa.Column('accuracy_cible', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id_modele', name='modeleia_pkey')
    )
    op.create_table('Analyse',
    sa.Column('id_analyse', sa.INTEGER(), server_default=sa.text('nextval(\'"Analyse_id_analyse_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('id_empreinte', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date_analyse', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('nombre_de_cretes', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('classification', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id_empreinte'], ['empreinte.id_empreinte'], name='Analyse_id_empreinte_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id_analyse', name='Analyse_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('empreinte',
    sa.Column('id_empreinte', sa.INTEGER(), server_default=sa.text("nextval('empreinte_id_empreinte_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('id_utilisateur', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id_image', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id_image'], ['imageempreinte.id_image'], name='empreinte_id_image_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['id_utilisateur'], ['utilisateur.id_utilisateur'], name='empreinte_id_utilisateur_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id_empreinte', name='empreinte_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('rapport',
    sa.Column('id_rapport', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('id_analyse', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('format', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id_analyse'], ['Analyse.id_analyse'], name='rapport_id_analyse_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id_rapport', name='rapport_pkey')
    )
    op.create_table('imageempreinte',
    sa.Column('id_image', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('path_image', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('format', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id_image', name='imageempreinte_pkey')
    )
    # ### end Alembic commands ###
